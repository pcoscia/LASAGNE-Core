sudo: false
language: cpp

git:
  depth: 10

matrix:
  include:

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
      env: COMPILER=g++-4.8

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: COMPILER=g++-7

    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang++-5.0
      env: COMPILER=clang++-5.0

env:
  global:
    # MPC settings
    - MPC_ROOT=$TRAVIS_BUILD_DIR/ext/MPC
    # ACE/TAO settings
    - ACE_ROOT=$TRAVIS_BUILD_DIR/ext/ACE_TAO/ACE
    - TAO_ROOT=$TRAVIS_BUILD_DIR/ext/ACE_TAO/TAO
    - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ACE_ROOT/lib
    # OpenDDS settings
    - DDS_ROOT=$TRAVIS_BUILD_DIR/ext/OpenDDS
    - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$DDS_ROOT/lib
    # LASAGNE settings
    - DAF_ROOT=$TRAVIS_BUILD_DIR
    - TAF_ROOT=$DAF_ROOT/TAF
    - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$DAF_ROOT/lib

before_install:
  - mkdir ext
  - cd ext
  - git clone --depth 1 git://github.com/DOCGroup/MPC.git
  - git clone -b Latest_Micro --depth 1 git://github.com/DOCGroup/ACE_TAO.git
  - git clone -b latest-release --depth 1 git://github.com/objectcomputing/OpenDDS.git
  - cd ..

branches:
  only:
    - CI_Testing
    - develop
    - master
    - release*

install:

before_script:
  # Print out the compiler version (useful to track)
  - $COMPILER --version
  # Copy additional build files into the correct locations
  - cp bin/build/ace/config.h $ACE_ROOT/ace/config.h
  - cp bin/build/ace/default.features $ACE_ROOT/bin/MakeProjectCreator/config/default.features
  # Platform macros to use depend on the OS and compiler combination
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      echo "OSX detected";
      cp -f bin/build/ace/platform_macros.GNU.osxTarget $ACE_ROOT/include/makeinclude/platform_macros.GNU;
    fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      if [ "$CXX" == "g++" ]; then
         echo "Linux and g++ detected";
         cp -f bin/build/ace/platform_macros.GNU.ci $ACE_ROOT/include/makeinclude/platform_macros.GNU;
      else
         echo "Linux and clang detected";
         cp -f bin/build/ace/platform_macros.GNU.clangTarget $ACE_ROOT/include/makeinclude/platform_macros.GNU;
      fi
    fi

script:
  - wget https://dl.bintray.com/jfrog/jfrog-cli-go/1.7.1/jfrog-cli-linux-amd64/jfrog
  - chmod +x jfrog
  - cd $TAF_ROOT
  - perl $ACE_ROOT/bin/mwc.pl -type gnuace -workers 2 TAF_CI.mwc
  - make CXX=$COMPILER --jobs 6 --quiet
  - ./jfrog rt config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_PASSWORD
  - ./jfrog rt u "multi*/*.jar" travisci-generic-local --build-name=travisci-generic-artifactory --build-number=$TRAVIS_BUILD_NUMBER --flat=false
  - ./jfrog rt u "multi*/*.war" travisci-generic-local --build-name=travisci-generic-artifactory --build-number=$TRAVIS_BUILD_NUMBER --flat=false
  - ./jfrog rt bce travisci-generic-artifactory $TRAVIS_BUILD_NUMBER
  - ./jfrog rt bp travisci-generic-artifactory $TRAVIS_BUILD_NUMBER